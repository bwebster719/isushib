<?php

/**
 * @file
 * Syncs the access list with Active Directory group(s).
 */


/**
 * Implements hook_cron().
 */
function isushibsiteaccesssync_cron() {
  $ad_username = variable_get('isushibsiteaccesssync_ad_username', '');
  $ad_password = variable_get('isushibsiteaccesssync_ad_password', '');
  $ad_group_names = explode(',', variable_get('isushibsiteaccesssync_ad_group_names', ''));
  $ad_ldap_server = variable_get('isushibsiteaccesssync_ad_ldap_server', 'windc.iastate.edu');
  $ad_ldap_dn = variable_get('isushibsiteaccesssync_ad_ldap_dn', 'dc=iastate,dc=edu');

  // Exit if we don't have the variables that we need.
  $ad_group_names = array_filter($ad_group_names);
  if ($ad_username == '' || $ad_password == '' || empty($ad_group_names)) {
    return;
  }

  // Make sure we have LDAP extensions installed
  if (!function_exists('ldap_connect')) {
    watchdog('isushibsiteaccesssync', 'PHP LDAP extensions not installed, exiting.');
    return;
  }

  // Make sure we can connet to the LDAP server
  $directory_service = ldap_connect($ad_ldap_server);
  if (!$directory_service) {
    watchdog('isushibsiteaccesssync', 'Could not connect to LDAP server.');
    return;
  }


  // Set some LDAP options
  ldap_set_option($directory_service, LDAP_OPT_REFERRALS, 0);
  ldap_set_option($directory_service, LDAP_OPT_PROTOCOL_VERSION, 3);
  ldap_bind($directory_service, $ad_username, $ad_password);

  isushibsiteaccesssync_mark_users_to_delete();

  foreach ($ad_group_names as $ad_group_name) {

    // Do the actual search
    $ad_group_name = trim($ad_group_name);
    $search_term = '(cn=' . $ad_group_name . ')';
    $sr = ldap_search($directory_service, $ad_ldap_dn, $search_term);
    $info = ldap_get_entries($directory_service, $sr);

    // Check that we found something
    if ($info['count'] == 0) {
      watchdog('isushibsiteaccesssync', 'Can not read from %name.', array('%name' => $ad_group_name));
      continue;
    }

    // One key pair is the count, don't need to keep this
    $group_membership = $info[0]['member'];
    unset($group_membership['count']);

    // Handle each member of the group
    foreach ($group_membership as $key => $value) {
      $username = str_replace('CN=', '', $value);
      $username = substr($username, 0, stripos($username, ','));

      isushibsiteaccesssync_handle_user($username);
    }

  }
}

/**
 * Mark all AD users to delete.
 */
function isushibsiteaccesssync_mark_users_to_delete() {
  db_update('isushibsiteaccess_users')
    ->fields(array('status' => 'Delete'))
    ->condition('status', 'AD', '=')
    ->execute();
}

/**
 * Make sure the user has access
 */
function isushibsiteaccesssync_handle_user($username) {
  // Select the user's record
  $query = db_select('isushibsiteaccess_users', 'pu')
    ->fields('pu', array('fuid', 'name', 'status'))
    ->condition('name', $username, '=');
  $results = $query->execute();

  // Check if the user exists
  if ($results->rowCount() == 1) {
    //Update the status
    $num_updated = db_update('isushibsiteaccess_users')
      ->fields(array('status' => 'AD'))
      ->condition('name', $username, '=')
      ->execute();
  }
  else {
    // Add user record.
    $record = array(
      'name' => $username,
      'status' => 'AD',
    );
    drupal_write_record('isushibsiteaccess_users', $record);
  }
}